#include <iostream>
#include <string>
using namespace std;

int main() {
   string coreGtld1;
   string coreGtld2;
   string coreGtld3;
   string coreGtld4;
   string inputName;
   string searchName;
   string theTld;
   bool isCoreGtld;
   // FIXME: Add variable periodCounter to count periods in a domain name
   int periodPosition;   // Position of the period in the domain name
   unsigned int j;

   coreGtld1 = ".com";
   coreGtld2 = ".net";
   coreGtld3 = ".org";
   coreGtld4 = ".info";
   theTld = "";
   isCoreGtld = false;
   periodPosition = 0;

   cout << endl << "Enter the next domain name (<Enter> to exit): " << endl;
   cin >> inputName;

   while (inputName.size() > 0) {
      searchName = inputName;
      for (j = 0; j < inputName.size(); ++j) {
         searchName.at(j) = tolower(inputName.at(j));
      }
      isCoreGtld = false;

      // FIXME: Write a for loop using variable i to store in periodCounter the
      //        number of periods in searchName. Store the position of the period in
      //        periodPosition. If searchName has exactly one period and searchName's
      //        first character is not a period, determine whether searchName has a 
      //        valid core gTLD by extracting the domain name into variable theTld
      //        and comparing the name with valid core gTLDs.

      // Extract the top-level domain name starting at the period's position.
      // Ex: If searchName = "example.com", the next statement extracts ".com"
      theTld = searchName.substr(periodPosition);

      if (theTld == coreGtld1) {
         isCoreGtld = true;
      }
      else if (theTld == coreGtld2) {
         isCoreGtld = true;
      }
      else if (theTld == coreGtld3) {
         isCoreGtld = true;
      }
      else if (theTld == coreGtld4) {
         isCoreGtld = true;
      }
      else {
         isCoreGtld = false;
      }
      
      cout << "\"" << inputName << "\" ";
      if (isCoreGtld) {
         cout << "is a second-level domain followed by a core gTLD of \"" <<
                 theTld << "\"." << endl;
      }
      else {
         cout << "is not a second-level domain followed by a core gTLD." << endl;
      }

      cout << endl << "Enter the next domain name (or <Enter> to exit): " << endl;
      inputName = "";
      cin >> inputName;
   }

   return 0;
}
